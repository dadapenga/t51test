<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[[2017-01-06 18:39:58] 通过login_useraccount找元素<br />]]>
    </line>
    <line>
      <![CDATA[[2017-01-06 18:39:58] 通过login_userpassword找元素<br />]]>
    </line>
    <line>
      <![CDATA[[2017-01-06 18:39:59] 通过login_submit找元素<br />]]>
    </line>
    <line>
      <![CDATA[<P style="font-size:1.1em;color:#ED1C24"><b>┌───────────────────────┤ＣＨＥＣＫ　ＰＯＩＮＴ├───────────────────────┐<br>[目标]：检查是否一样<br>[实际]：text　[预期]：这是1<br>└──────────────────────────────────────────────────────────────────┘<br /></b></P>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="13136" started-at="2017-01-06T10:39:47Z" finished-at="2017-01-06T10:40:00Z">
    <groups>
    </groups>
    <test name="TestDebug" duration-ms="13136" started-at="2017-01-06T10:39:47Z" finished-at="2017-01-06T10:40:00Z">
      <class name="testng.Test1">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testng.Test1@6f1fba17]" name="beforeTest" is-config="true" duration-ms="8777" started-at="2017-01-06T18:39:49Z" finished-at="2017-01-06T18:39:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="test1(java.util.Map)[pri:0, instance:testng.Test1@6f1fba17]" name="test1" duration-ms="1041" started-at="2017-01-06T18:39:58Z" data-provider="test1" finished-at="2017-01-06T18:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{CaseID=1, UserName=admin, jieguo=这是1, Password=1234561}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[检查点检查出错误]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 检查点检查出错误
	at org.testng.Assert.fail(Assert.java:94)
	at testng.CheckPoint.checkString(CheckPoint.java:56)
	at testng.Test1.test1(Test1.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[[2017-01-06 18:39:58] 通过login_useraccount找元素<br />]]>
            </line>
            <line>
              <![CDATA[[2017-01-06 18:39:58] 通过login_userpassword找元素<br />]]>
            </line>
            <line>
              <![CDATA[[2017-01-06 18:39:59] 通过login_submit找元素<br />]]>
            </line>
            <line>
              <![CDATA[<P style="font-size:1.1em;color:#ED1C24"><b>┌───────────────────────┤ＣＨＥＣＫ　ＰＯＩＮＴ├───────────────────────┐<br>[目标]：检查是否一样<br>[实际]：text　[预期]：这是1<br>└──────────────────────────────────────────────────────────────────┘<br /></b></P>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testng.Test1@6f1fba17]" name="afterMethod" is-config="true" duration-ms="1449" started-at="2017-01-06T18:39:59Z" finished-at="2017-01-06T18:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testng.Test1 -->
    </test> <!-- TestDebug -->
  </suite> <!-- Suite -->
</testng-results>
